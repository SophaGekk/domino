name: Build and Release Domino Game

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

jobs:
  build-and-release:
    runs-on: windows-latest
    permissions:
      contents: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Qt
      id: qt-setup
      uses: jurplel/install-qt-action@v2
      with:
        version: '6.4.0'
        modules: qtbase qttools qtdeclarative qt5compat
        cached: true

    - name: Find Qt paths
      id: qt-paths
      shell: bash
      run: |
        echo "QT_PATH=${{ steps.qt-setup.outputs.qt-path }}" >> $GITHUB_ENV
        echo "MINGW_PATH=$(find ${{ steps.qt-setup.outputs.qt-path }} -name 'mingw*' -type d | head -1)" >> $GITHUB_ENV
        echo "QT_BIN=${{ steps.qt-setup.outputs.qt-path }}/bin" >> $GITHUB_ENV
        echo "Added QT_PATH: ${{ steps.qt-setup.outputs.qt-path }}"
        echo "Found MINGW_PATH: $(find ${{ steps.qt-setup.outputs.qt-path }} -name 'mingw*' -type d | head -1)"
        
    - name: Build project
      shell: cmd
      run: |
        "%QT_BIN%\qmake.exe" -version
        "%QT_BIN%\qmake.exe" -makefile
        "%MINGW_PATH%\bin\mingw32-make.exe" -j4 release
        
    - name: Prepare artifacts
      shell: cmd
      run: |
        mkdir domino_release
        copy release\domino.exe domino_release
        
        "%QT_BIN%\windeployqt.exe" --release --no-compiler-runtime domino_release\domino.exe
        
        if exist data xcopy /s /e /y data domino_release\data
        if exist README.md copy README.md domino_release
        if exist LICENSE copy LICENSE domino_release
        
        dir domino_release /s

    - name: Install 7-Zip
      run: choco install 7zip -y
      
    - name: Create ZIP archive
      run: 7z a domino_windows.zip domino_release\*

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: ${{ github.ref_name }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./domino_windows.zip
        asset_name: domino_windows.zip
        asset_content_type: application/zip