/****************************************************************************
** Resource object code
**
** Created by: The Resource Compiler for Qt version 6.8.2
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#ifdef _MSC_VER
// disable informational message "function ... selected for automatic inline expansion"
#pragma warning (disable: 4711)
#endif

static const unsigned char qt_resource_data[] = {
  // stats.json
  0x0,0x0,0x0,0xbb,
  0x28,
  0xb5,0x2f,0xfd,0x60,0xf2,0x2,0x8d,0x5,0x0,0xf2,0xc7,0x1a,0x19,0x60,0xcf,0x3,
  0xcb,0xc8,0x60,0x31,0x96,0xf8,0xc9,0x73,0x70,0x30,0xe,0x2f,0x1c,0xc4,0x26,0xbb,
  0xb2,0xb2,0x88,0xe0,0x17,0xc,0x9,0x6b,0x31,0xbe,0xff,0xfb,0x7,0x72,0x90,0xf3,
  0x19,0x4c,0x99,0x61,0x3e,0x70,0x39,0xb6,0xe,0xe5,0xd1,0x7,0x17,0x5c,0x36,0xf4,
  0x86,0xb0,0xab,0x7a,0x64,0xe9,0x62,0xa7,0x76,0xba,0x52,0x67,0xeb,0xdc,0xe8,0x8a,
  0x87,0xa5,0x5a,0x2d,0x4f,0x14,0xb8,0x7c,0xd,0xdb,0xb2,0x23,0x11,0xcc,0x38,0x9d,
  0x3a,0x4a,0x85,0x96,0x6,0x78,0x82,0x43,0xd9,0x50,0x7e,0xff,0x73,0xc5,0xab,0x79,
  0xa1,0xcf,0xb1,0x66,0x39,0xd6,0x90,0x1e,0x20,0x30,0x45,0x42,0x4d,0x1e,0x8c,0x54,
  0x30,0x75,0xbf,0x89,0xf0,0x4d,0xaf,0xfe,0x65,0xf4,0x34,0x81,0xe9,0xf5,0xaf,0xc9,
  0xbe,0x1,0x7f,0x21,0xb4,0x18,0x13,0x90,0x39,0x95,0xa3,0xcb,0xb0,0x71,0x43,0xd5,
  0x3b,0xb2,0x2c,0xdf,0x96,0x86,0x59,0xce,0xca,0xba,0xc3,0xf7,0xe9,0x20,0x0,0xd7,
  0xf,0x15,0xc,0xa6,0x60,0x58,0x46,0x0,0x4e,0x4,
  
};

static const unsigned char qt_resource_name[] = {
  // stats.json
  0x0,0xa,
  0xb,0x6a,0x4f,0x5e,
  0x0,0x73,
  0x0,0x74,0x0,0x61,0x0,0x74,0x0,0x73,0x0,0x2e,0x0,0x6a,0x0,0x73,0x0,0x6f,0x0,0x6e,
  
};

static const unsigned char qt_resource_struct[] = {
  // :
  0x0,0x0,0x0,0x0,0x0,0x2,0x0,0x0,0x0,0x1,0x0,0x0,0x0,0x1,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
  // :/stats.json
  0x0,0x0,0x0,0x0,0x0,0x4,0x0,0x0,0x0,0x1,0x0,0x0,0x0,0x0,
0x0,0x0,0x1,0x97,0xc5,0x28,0xd9,0xc7,

};

#ifdef QT_NAMESPACE
#  define QT_RCC_PREPEND_NAMESPACE(name) ::QT_NAMESPACE::name
#  define QT_RCC_MANGLE_NAMESPACE0(x) x
#  define QT_RCC_MANGLE_NAMESPACE1(a, b) a##_##b
#  define QT_RCC_MANGLE_NAMESPACE2(a, b) QT_RCC_MANGLE_NAMESPACE1(a,b)
#  define QT_RCC_MANGLE_NAMESPACE(name) QT_RCC_MANGLE_NAMESPACE2( \
        QT_RCC_MANGLE_NAMESPACE0(name), QT_RCC_MANGLE_NAMESPACE0(QT_NAMESPACE))
#else
#   define QT_RCC_PREPEND_NAMESPACE(name) name
#   define QT_RCC_MANGLE_NAMESPACE(name) name
#endif

#if defined(QT_INLINE_NAMESPACE)
inline namespace QT_NAMESPACE {
#elif defined(QT_NAMESPACE)
namespace QT_NAMESPACE {
#endif

bool qRegisterResourceData(int, const unsigned char *, const unsigned char *, const unsigned char *);
bool qUnregisterResourceData(int, const unsigned char *, const unsigned char *, const unsigned char *);

#if defined(__ELF__) || defined(__APPLE__)
static inline unsigned char qResourceFeatureZstd()
{
    extern const unsigned char qt_resourceFeatureZstd;
    return qt_resourceFeatureZstd;
}
#else
unsigned char qResourceFeatureZstd();
#endif

#ifdef QT_NAMESPACE
}
#endif

int QT_RCC_MANGLE_NAMESPACE(qInitResources_qmake_qmake_immediate)();
int QT_RCC_MANGLE_NAMESPACE(qInitResources_qmake_qmake_immediate)()
{
    int version = 3;
    QT_RCC_PREPEND_NAMESPACE(qRegisterResourceData)
        (version, qt_resource_struct, qt_resource_name, qt_resource_data);
    return 1;
}

int QT_RCC_MANGLE_NAMESPACE(qCleanupResources_qmake_qmake_immediate)();
int QT_RCC_MANGLE_NAMESPACE(qCleanupResources_qmake_qmake_immediate)()
{
    int version = 3;
    version += QT_RCC_PREPEND_NAMESPACE(qResourceFeatureZstd());
    QT_RCC_PREPEND_NAMESPACE(qUnregisterResourceData)
       (version, qt_resource_struct, qt_resource_name, qt_resource_data);
    return 1;
}

#ifdef __clang__
#   pragma clang diagnostic push
#   pragma clang diagnostic ignored "-Wexit-time-destructors"
#endif

namespace {
   struct initializer {
       initializer() { QT_RCC_MANGLE_NAMESPACE(qInitResources_qmake_qmake_immediate)(); }
       ~initializer() { QT_RCC_MANGLE_NAMESPACE(qCleanupResources_qmake_qmake_immediate)(); }
   } dummy;
}

#ifdef __clang__
#   pragma clang diagnostic pop
#endif
